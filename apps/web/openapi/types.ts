/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/health": {
    /** Health check */
    get: operations["getHealth"];
  };
  "/api/dashboard/sectors": {
    /** Get sector breakdown data (KSE-100 by default) */
    get: operations["getSectorBreakdown"];
  };
  "/api/companies": {
    /** Get companies list (KSE-100 by default) */
    get: operations["getCompanies"];
  };
  "/api/companies/{symbol}": {
    /** Get company analytics */
    get: operations["getCompanyAnalytics"];
  };
  "/api/indices/{code}": {
    /** Get index snapshot by code */
    get: operations["getIndexSnapshot"];
  };
  "/api/market/performers": {
    /** Get market performers (gainers, losers, volume leaders) */
    get: operations["getMarketPerformers"];
  };
  "/api/market/watch": {
    /** Get market watch table */
    get: operations["getMarketWatch"];
  };
  "/api/market/summary": {
    /** Get today's market boards summary */
    get: operations["getMarketSummary"];
  };
  "/api/historical": {
    /** Get historical OHLCV series */
    post: operations["getHistoricalSeries"];
  };
  "/api/announcements": {
    /** Get company announcements */
    post: operations["getAnnouncements"];
  };
  "/api/company/{symbol}/reports": {
    /** Get company reports (documents) */
    get: operations["getCompanyReports"];
  };
  "/api/company/{symbol}/intraday": {
    /** Get intraday price series for a company */
    get: operations["getCompanyIntraday"];
  };
  "/api/indices": {
    /** Get snapshots for all indices */
    get: operations["getIndices"];
  };
  "/api/indices/{code}/intraday": {
    /** Get intraday series for an index */
    get: operations["getIndexIntraday"];
  };
  "/api/symbols": {
    /** Get all tradable symbols */
    get: operations["getSymbols"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    HealthResponse: {
      /** @example ok */
      status?: string;
      /** @example backend */
      service?: string;
      /** Format: date-time */
      timestamp?: string;
    };
    SectorBreakdownResponse: {
      sectors?: components["schemas"]["SectorData"][];
      /** @description Total market cap in PKR millions */
      totalMarketCap?: number;
      /** Format: date-time */
      lastUpdated?: string;
    };
    SectorData: {
      /** @example Banking */
      name?: string;
      /** @description Market cap in PKR millions */
      marketCap?: number;
      /** @description Percentage of total market */
      percentage?: number;
      /** @description Number of companies in sector */
      companiesCount?: number;
      /** @description Average P/E ratio */
      avgPE?: number;
      /** @description 1-month performance percentage */
      performance1M?: number;
    };
    CompaniesResponse: {
      companies?: components["schemas"]["CompanyBasic"][];
      total?: number;
      page?: number;
      limit?: number;
    };
    CompanyBasic: {
      /** @example HBL */
      symbol?: string;
      /** @example Habib Bank Limited */
      name?: string;
      /** @example Banking */
      sector?: string;
      /** @description Market cap in PKR millions */
      marketCap?: number;
      /** @description Current share price */
      price?: number;
      /** @description Price change percentage */
      change?: number;
      /** @description P/E ratio */
      pe?: number;
    };
    CompanyAnalyticsResponse: {
      company?: components["schemas"]["CompanyDetails"];
      financials?: components["schemas"]["CompanyFinancials"];
      ratios?: components["schemas"]["CompanyRatios"];
      performance?: components["schemas"]["CompanyPerformance"];
    };
    CompanyDetails: {
      symbol?: string;
      name?: string;
      sector?: string;
      industry?: string;
      marketCap?: number;
      sharesOutstanding?: number;
      description?: string;
      website?: string;
    };
    CompanyFinancials: {
      /** @description TTM revenue in PKR millions */
      revenue?: number;
      /** @description TTM net income in PKR millions */
      netIncome?: number;
      /** @description Total assets in PKR millions */
      totalAssets?: number;
      /** @description Total equity in PKR millions */
      totalEquity?: number;
      /** @description Cash and equivalents in PKR millions */
      cash?: number;
      /** @description Total debt in PKR millions */
      debt?: number;
    };
    CompanyRatios: {
      /** @description P/E ratio */
      pe?: number;
      /** @description P/B ratio */
      pb?: number;
      /** @description Return on equity percentage */
      roe?: number;
      /** @description Return on assets percentage */
      roa?: number;
      /** @description Debt to equity ratio */
      debtToEquity?: number;
      /** @description Current ratio */
      currentRatio?: number;
      /** @description Gross margin percentage */
      grossMargin?: number;
      /** @description Net margin percentage */
      netMargin?: number;
    };
    CompanyPerformance: {
      /** @description Current price */
      price?: number;
      /** @description 1-day change percentage */
      change1D?: number;
      /** @description 1-week change percentage */
      change1W?: number;
      /** @description 1-month change percentage */
      change1M?: number;
      /** @description 3-month change percentage */
      change3M?: number;
      /** @description 1-year change percentage */
      change1Y?: number;
      /** @description 52-week high */
      high52W?: number;
      /** @description 52-week low */
      low52W?: number;
    };
    IndicesResponse: {
      /** Format: date-time */
      asOf?: string;
      indices?: components["schemas"]["IndexSnapshot"][];
    };
    IndexSnapshot: {
      code?: string;
      name?: string;
      value?: number;
      change?: number;
      changePct?: number;
      high?: number;
      low?: number;
      volume?: number;
      /** Format: date-time */
      asOf?: string;
    };
    Performer: {
      symbol?: string;
      name?: string;
      price?: number;
      changePct?: number;
      volume?: number;
    };
    PerformersResponse: {
      gainers?: components["schemas"]["Performer"][];
      losers?: components["schemas"]["Performer"][];
      volumeLeaders?: components["schemas"]["Performer"][];
    };
    MarketWatchRow: {
      symbol?: string;
      sector?: string;
      /** @description Comma separated index memberships */
      listedIn?: string;
      ldcp?: number;
      open?: number;
      high?: number;
      low?: number;
      current?: number;
      change?: number;
      percentChange?: number;
      volume?: number;
    };
    MarketWatchResponse: {
      rows?: components["schemas"]["MarketWatchRow"][];
    };
    BoardSummary: {
      board?: string;
      trades?: number;
      volume?: number;
      value?: number;
    };
    MarketSummaryResponse: {
      /** Format: date-time */
      asOf?: string;
      boards?: components["schemas"]["BoardSummary"][];
    };
    HistoricalRequest: {
      symbol: string;
      /** Format: date */
      dateFrom: string;
      /** Format: date */
      dateTo: string;
      /** @enum {string} */
      interval: "daily" | "weekly" | "monthly" | "intraday";
    };
    OHLCVPoint: {
      /** @description ISO date or datetime */
      date?: string;
      open?: number;
      high?: number;
      low?: number;
      close?: number;
      volume?: number;
    };
    HistoricalSeriesResponse: {
      symbol?: string;
      series?: components["schemas"]["OHLCVPoint"][];
    };
    AnnouncementsRequest: {
      symbol: string;
      /** Format: date */
      fromDate?: string;
      /** Format: date */
      toDate?: string;
      categories?: string[];
    };
    AnnouncementItem: {
      id?: string;
      /** Format: date */
      date?: string;
      title?: string;
      category?: string;
      url?: string;
    };
    AnnouncementsResponse: {
      symbol?: string;
      announcements?: components["schemas"]["AnnouncementItem"][];
    };
    CompanyReportItem: {
      /** Format: date */
      date?: string;
      title?: string;
      category?: string;
      pdfUrl?: string;
    };
    CompanyReportsResponse: {
      symbol?: string;
      reports?: components["schemas"]["CompanyReportItem"][];
    };
    IntradayPoint: {
      /** @description ISO datetime */
      time?: string;
      price?: number;
      volume?: number;
    };
    IntradaySeriesResponse: {
      symbol?: string;
      points?: components["schemas"]["IntradayPoint"][];
    };
    SymbolItem: {
      symbol?: string;
      name?: string;
      sectorName?: string;
      isETF?: boolean;
      isDebt?: boolean;
    };
    SymbolsResponse: {
      symbols?: components["schemas"]["SymbolItem"][];
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** Health check */
  getHealth: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["HealthResponse"];
        };
      };
    };
  };
  /** Get sector breakdown data (KSE-100 by default) */
  getSectorBreakdown: {
    parameters: {
      query?: {
        /** @description Filter by index/board (default KSE-100) */
        index?: "KSE100";
      };
    };
    responses: {
      /** @description Sector breakdown data */
      200: {
        content: {
          "application/json": components["schemas"]["SectorBreakdownResponse"];
        };
      };
    };
  };
  /** Get companies list (KSE-100 by default) */
  getCompanies: {
    parameters: {
      query?: {
        /** @description Filter by sector */
        sector?: string;
        /** @description Listing status filter (e.g., NC) */
        status?: string;
        /** @description Filter by index/board (default KSE-100) */
        index?: "KSE100";
        /** @description Page number (1-based) */
        page?: number;
        /** @description Limit number of results */
        limit?: number;
      };
    };
    responses: {
      /** @description List of companies */
      200: {
        content: {
          "application/json": components["schemas"]["CompaniesResponse"];
        };
      };
    };
  };
  /** Get company analytics */
  getCompanyAnalytics: {
    parameters: {
      path: {
        /** @description Company symbol */
        symbol: string;
      };
    };
    responses: {
      /** @description Company analytics data */
      200: {
        content: {
          "application/json": components["schemas"]["CompanyAnalyticsResponse"];
        };
      };
    };
  };
  /** Get index snapshot by code */
  getIndexSnapshot: {
    parameters: {
      path: {
        /** @description Index code (e.g., KSE100) */
        code: string;
      };
    };
    responses: {
      /** @description Index snapshot */
      200: {
        content: {
          "application/json": components["schemas"]["IndexSnapshot"];
        };
      };
    };
  };
  /** Get market performers (gainers, losers, volume leaders) */
  getMarketPerformers: {
    parameters: {
      query?: {
        /** @description Market board code */
        board?: string;
        /** @description Trading session identifier */
        session?: string;
        /** @description Asset class filter */
        assetClass?: "equity" | "debt";
      };
    };
    responses: {
      /** @description Market performers */
      200: {
        content: {
          "application/json": components["schemas"]["PerformersResponse"];
        };
      };
    };
  };
  /** Get market watch table */
  getMarketWatch: {
    responses: {
      /** @description Market watch rows */
      200: {
        content: {
          "application/json": components["schemas"]["MarketWatchResponse"];
        };
      };
    };
  };
  /** Get today's market boards summary */
  getMarketSummary: {
    responses: {
      /** @description Boards totals summary */
      200: {
        content: {
          "application/json": components["schemas"]["MarketSummaryResponse"];
        };
      };
    };
  };
  /** Get historical OHLCV series */
  getHistoricalSeries: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["HistoricalRequest"];
      };
    };
    responses: {
      /** @description Historical OHLCV series */
      200: {
        content: {
          "application/json": components["schemas"]["HistoricalSeriesResponse"];
        };
      };
    };
  };
  /** Get company announcements */
  getAnnouncements: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["AnnouncementsRequest"];
      };
    };
    responses: {
      /** @description Announcements list */
      200: {
        content: {
          "application/json": components["schemas"]["AnnouncementsResponse"];
        };
      };
    };
  };
  /** Get company reports (documents) */
  getCompanyReports: {
    parameters: {
      path: {
        /** @description Company symbol */
        symbol: string;
      };
    };
    responses: {
      /** @description Reports list */
      200: {
        content: {
          "application/json": components["schemas"]["CompanyReportsResponse"];
        };
      };
    };
  };
  /** Get intraday price series for a company */
  getCompanyIntraday: {
    parameters: {
      path: {
        /** @description Company symbol */
        symbol: string;
      };
    };
    responses: {
      /** @description Intraday series */
      200: {
        content: {
          "application/json": components["schemas"]["IntradaySeriesResponse"];
        };
      };
    };
  };
  /** Get snapshots for all indices */
  getIndices: {
    responses: {
      /** @description Indices snapshot list */
      200: {
        content: {
          "application/json": components["schemas"]["IndicesResponse"];
        };
      };
    };
  };
  /** Get intraday series for an index */
  getIndexIntraday: {
    parameters: {
      path: {
        code: string;
      };
    };
    responses: {
      /** @description Intraday series */
      200: {
        content: {
          "application/json": components["schemas"]["IntradaySeriesResponse"];
        };
      };
    };
  };
  /** Get all tradable symbols */
  getSymbols: {
    responses: {
      /** @description Symbols list */
      200: {
        content: {
          "application/json": components["schemas"]["SymbolsResponse"];
        };
      };
    };
  };
}
